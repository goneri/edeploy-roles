---
# file: roles/openstack-full/tasks/main.yml

# Debian has a kernel upgrade from 3.14 to 3.16
# So we need to restart the compute nodes and migrate the instances before.
- name: migrate instances
  script: migrate.sh {{ ansible_fqdn }} {{ os_username }} {{ os_tenant_name }} {{ os_password }} {{ os_auth_url }}
  tags: before_config
  when: ansible_distribution == 'Debian'

# RabbitMQ is upgraded in RHEL7
- name: stop rabbitmq
  service: name=rabbitmq-server state=stopped
  tags: before_config
  when: ansible_distribution == 'RedHat'

# MySQL is upgraded in RHEL7
# since we don't know if the node is master or not, we stop mysql anyway
- name: stop mysql
  service: name={{ item }} state=stopped
  with_items:
    - mysqld
  tags: before_config
  ignore_errors: yes
  when: ansible_distribution == 'RedHat'

- name: edeploy upgrade
  edeploy: command=upgrade version={{ distro }}-{{ version }}
  tags: before_config

- name: reload systemd scripts list
  command: systemctl daemon-reload
  tags: before_config
  when: ansible_distribution == 'RedHat'

#### Red Hat upgrade Galera to 25.3.5-5.el7ost
#### since we start in serial mode one by one, we are sure here that the first node
#### in the list will be master.
#### For other nodes, they will be started by Puppet later.
###- name: create systemd mysql-bootstrap script
###  copy: src=mysql-bootstrap.service dest=/etc/systemd/system/mysqld.service
###  tags: before_config
###  when: ansible_distribution == 'RedHat' and inventory_hostname == groups['openstack-full'][-1]
###
##- name: reload systemd scripts list
##  command: systemctl daemon-reload
##  tags: before_config
##  when: ansible_distribution == 'RedHat'
##
##- name: bootstrap mysql cluster again
##  service: name=mysqld state=started
##  tags: before_config
##  when: ansible_distribution == 'RedHat' and inventory_hostname == groups['openstack-full'][-1]

- name: restart the mysql nodes
  service: name=mysqld state=started
  tags: before_config
  when: ansible_distribution == 'RedHat'

##- name: drop the mysql-bootstrap script
##  file: path=/etc/systemd/system/mysqld.service state=absent
##  tags: before_config
##  when: ansible_distribution == 'RedHat' and inventory_hostname == groups['openstack-full'][-1]
##

# RabbitMQ
- name: start RabbitMQ nodes
  service: name=rabbitmq-server state=started
  tags: before_config
  when: ansible_distribution == 'RedHat'

# libvirtd is updated on RHEL7
- name: restart libvirtd after upgrade
  service: name=libvirtd state=restarted
  tags: before_config
  when: ansible_distribution == 'RedHat'

- name: restart nova-compute after upgrade
  service: name=openstack-nova-compute state=restarted
  tags: before_config
  when: ansible_distribution == 'RedHat'

- name: allow instance scheduling on the compute node
  command: nova-manage service enable --service nova-compute --host {{ ansible_hostname }}
  tags: before_config
  when: ansible_distribution == 'Debian'

# after upgrade, heat-api is zombie
- name: kill heat-api process
  command: pkill -9 heat-api
  tags: before_config
  when: ansible_distribution == 'Debian'

# then, restart it
- name: start heat-api service
  service: name=heat-api state=started
  tags: before_config
  when: ansible_distribution == 'Debian'

# HAproxy has been updated in Debian
# from 1.5~dev26-2~bpo70+1 to 1.5.4-1~bpo70+2
- name: restart HAproxy service
  service: name=haproxy state=restarted
  tags: before_config
  when: ansible_distribution == 'Debian'

# sensu has been upgrade in Debian
# from 0.14.0-1 to 0.16.0-1
- name: restart sensu
  service: name=sensu-client state=restarted
  tags: before_config
  when: ansible_distribution == 'Debian'

- name: restart Cinder services after upgrade
  service: name={{ item }} state=restarted
  with_items:
    - openstack-cinder-api
    - openstack-cinder-volume
  tags: after_config
  when: ansible_distribution == 'RedHat'

- name: restart neutron-plugin-openvswitch-agent after upgrade
  service: name=neutron-plugin-openvswitch-agent state=restarted
  tags: after_config
  when: ansible_distribution == 'Debian'

- name: restart neutron-l3-agent after upgrade
  service: name=neutron-l3-agent state=restarted
  tags: after_config

- name: restart apache after upgrade
  service: name=httpd state=restarted
  tags: after_config
  when: ansible_distribution == 'RedHat'
